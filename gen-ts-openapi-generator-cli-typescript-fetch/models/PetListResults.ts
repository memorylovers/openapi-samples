/* tslint:disable */
/* eslint-disable */
/**
 * Pet Store Service
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Pet } from './Pet';
import {
    PetFromJSON,
    PetFromJSONTyped,
    PetToJSON,
} from './Pet';

/**
 * 
 * @export
 * @interface PetListResults
 */
export interface PetListResults {
    /**
     * 
     * @type {Array<Pet>}
     * @memberof PetListResults
     */
    items: Array<Pet>;
    /**
     * 
     * @type {string}
     * @memberof PetListResults
     */
    nextLink?: string;
}

/**
 * Check if a given object implements the PetListResults interface.
 */
export function instanceOfPetListResults(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function PetListResultsFromJSON(json: any): PetListResults {
    return PetListResultsFromJSONTyped(json, false);
}

export function PetListResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PetListResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(PetFromJSON)),
        'nextLink': !exists(json, 'nextLink') ? undefined : json['nextLink'],
    };
}

export function PetListResultsToJSON(value?: PetListResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(PetToJSON)),
        'nextLink': value.nextLink,
    };
}

